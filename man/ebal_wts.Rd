% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wts_gen.R
\name{ebal_wts}
\alias{ebal_wts}
\title{Entropy balancing weights for causal generalization}
\usage{
ebal_wts(x, trt, H_vars, target_moments = NULL, H_add_intercept = TRUE, delta)
}
\arguments{
\item{x}{A data matrix for the source sample. Each column represents
source sample covariate and each row represents an observation.}

\item{trt}{A vector of 0, 1 or FALSE/TRUE of treatment assignment for the source sample.}

\item{H_vars}{A vector of numbers indexing which covariate in \code{x}
need to be balanced between source and target samples.}

\item{target_moments}{A vector of first moments of the target sample covariates
that needs to be balanced between source and target.}

\item{H_add_intercept}{`logical` whether to include 1 as intercept in
H covariates, default as TRUE.}

\item{delta}{A vector specifying the approximate balancing tolerance margin.
The vector has a total length of H+H+G, where H represents the number of
covariates balanced between the source (treatment and control) and the
target moments, and G represents the covariates balanced solely between
the source treatment and control groups. If exact balancing, delta are all zeros.}
}
\value{
A list containing:
\item{w}{A vector of entropy balancing weights for causal generalization.}
\item{theta}{The dual parameters estimated from the optimization process.}
}
\description{
Compute the exact and approximate entropy balancing weights
proposed in the paper. If the tolerance margin \code{delta} is all 0,
it computes exact balancing weights. Otherwise, it computes approximate
balancing weights.
}
\examples{
library(EBalGen)
set.seed(1)
n = 100
p = 5
x = runif(n * p)
x = matrix(4 * x - 2, n, p)
trt = rbinom(n,1,0.5)
H_vars = c(1,2,3)
target_moments = c(0,0,0)
delta = numeric(8)

## Exact balancing weights
ebal_wts(x, trt,H_vars, target_moments = target_moments, H_add_intercept = TRUE,delta)

## Approximate balancing weights requires installation of MOSEK for optimization.
delta = numeric(8)+0.1
if (requireNamespace("CVXR", quietly = TRUE)) {
  if (!("MOSEK" \%in\% CVXR::installed_solvers())) {
      stop("MOSEK solver is not installed. Please install MOSEK to use it with CVXR.")}
  ebal_wts(x, trt,H_vars, target_moments = target_moments, H_add_intercept = TRUE,delta)

}
}
